# 2-matrix_divided.py

==============================
How to use 2-matrix_divided.py
==============================

This module provides one function which requires 2 arguments, 
a matrix and a dividend. it will divide all the elements 
in the matrix by the dividend and returns a new matrix.
the matrix should be a list of lists, containing an integers or 
float numbers. the dividend is an integer, and it can't be 0.


Numbers
=======

If we pass a matrix with a list of integers, it will divide all the element 
of the lists by the dividend and return a new matrix.

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix_divided([[1, 2], [3, 4]], 3)
	[[0.33, 0.67], [1.0, 1.33]]

::

	>>> matrix_divided([[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]], 5)
	[[0.02, 0.04, 0.06], [0.08, 0.1, 0.12]]

::

Non numbers
===========

If the matrix is not a number, then an exception will be raised.

::

	>>> matrix_divided("String", 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "String")
	Traceback (most recent call last):
	TypeError: div must be a number

::

Different row size
==================

If the lists have different size (different row length), 
an exception will be raised.

::

	>>> matrix_divided([[10, 52], [5, 2, 12]], 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

::

Zero devision
=============

The dividend must not have a value of 0, otherwise an exception is expected.

::

	>>> matrix_divided([[10, 52], [5, 2, 12]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

::
