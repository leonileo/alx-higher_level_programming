# 0-add_integer.txt

===========================
How to use 0-add_integer.py
===========================

This module is very simple, since it only has one function
called ``add_integer()``.

Only one value 
==============

If we provide only one argument the function will calculate the value.

::
	>>> add_integer =  __import__('0-add_integer').add_integer
	>>> add_integer(2)
	100

::

Two integers
============

When we pass two values, the second value will be calculated 
straight from the provided argument.

::

	>>> add_integer(2, 5)
	7

::

Negative numbers
================

The function will work with negative numbers too.

::

	>>> add_integer(-1, 2)
	1

::


Float numbers
=============

If one of the argument is float, it will be casted into integer
first then calculated.

::

	>>> add_integer(100.3, 2)
	102

::

Large amount
============

::
	>>> add_integer(2, float('inf'))
	Traceback (most recent call last):
	TypeError: b must be an integer

::

	>>> add_integer(float('-inf'), 5)
	Traceback (most recent call last):
	TypeError: a must be an integer

::

Different data type
===================

::

	>>> add_integer("string", [])
	Traceback (most recent call last):
	TypeError: a must be an integer

::

NaN value
=========

	>>> add_integer(float('nan'), 8)
	Traceback (most recent call last):
	TypeError: a must be an integer

None value
==========

::

	>>> add_integer(3, None)
	Traceback (most recent call last):
	TypeError: b must be an integer

::
